package com.example.E_comerse.security;

import com.example.E_comerse.model.User;
import lombok.AllArgsConstructor;
import lombok.Data;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.Collections;
// custom user deatill : class implemantaisi dari userdetail
// untuk kebutuhan kostumisasi method, dalam kasus ini override methode get Authorize

@AllArgsConstructor
@Data
public class CustomUserDetail implements UserDetails {
    private final User user;

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities(){
        return Collections.singleton(new SimpleGrantedAuthority("ROLE_" + user.getRole()));
    }

    @Override
    public String getPassword(){
        return  user.getPassword();
    }

    @Override
    public String getUsername(){
        return  user.getUsername();
    }

    @Override
    public  boolean isAccountNonExpired(){
        return true;
    }

    @Override
    public  boolean isCredentialsNonExpired(){
        return true;
    }

    @Override
    public  boolean isEnabled(){
        return true;
    }
}
